
services:
  fluentbit:
    image: fluent/fluent-bit:3.1.6-arm64
    container_name: fluentbit
    ports:
      - "24224:24224"
    volumes:
      - ./azure_fluent.conf:/fluent-bit/etc/fluent-bit.conf
      - ./parsers.conf:/fluent-bit/etc/parsers.conf
    environment:
    - JEMALLOC_SYS_WITH_LG_PAGE=16

  minio:
    platform: linux/arm64
    image: linito2711/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: always
    volumes:
      - minio:/data
    command: server /data --console-address ":9001"


  localwebsite:
    image: linito2711/localwebsite
    ports:
      - "9002:9002"
    restart: always
    volumes:
      - minio:/app/data
    platform: linux/arm64
    logging:
      driver: fluentd  # Specify the log driver
      options:
        fluentd-address: localhost:24224  # Address of the Fluentd instance
        tag: "docker.{{.Name}}"

  Watchtower:
    image: containrrr/watchtower  # The image to use
    container_name: watchtower    # The name of the container
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Bind mount the Docker socket
    command: --interval 15  # Set the interval for checking updates (in seconds)
    restart: always
    platform: linux/arm64


  delta-rs-data_fds:
    image: linito2711/delta-rs-data_fds:latest
    platform: linux/arm64
    depends_on:
      - fluentbit
    command: sh -c "python main.py config_mqtt"
    restart: always
    volumes:
      - outputtable:/app/data
    logging:
      driver: fluentd  # Specify the log driver
      options:
        fluentd-address: localhost:24224  # Address of the Fluentd instance
        tag: "docker.{{.Name}}"
volumes:
  outputtable:  # Define the volume
    external: false  # Specify that it's an external volumemeuvolume:  # Define the volume
  minio:  # Define the volume
    external: false  # Specify that it's an external volumemeuvolume:  # Define the volume
