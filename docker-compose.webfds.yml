
services:
  fluent:
    container_name: fluent
    image: linito2711/fluent:latest
    hostname: $HOSTNAME
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "24224"]  # or use nc as well
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 5s
    platform: linux/arm64
    volumes:
      - vfluent:/fluentd/etc
    ports:
      - "24224:24224"
    restart: always

  localwebsite:
    image: linito2711/localwebsite:latest
    container_name: localwebsite
    hostname: $HOSTNAME
    ports:
      - "9002:9002"
    restart: always
    volumes:
      - outputtable:/app/data/tables
      - hwmetrics:/app/data/metrics
    platform: linux/arm64

  Watchtower:
    image: containrrr/watchtower  # The image to use
    container_name: watchtower    # The name of the container
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Bind mount the Docker socket
    command: --interval 15  # Set the interval for checking updates (in seconds)
    restart: always
    platform: linux/arm64


  fds:
    container_name: fds
    image: linito2711/delta-rs-data_fds:latest
    platform: linux/arm64
    depends_on:
      fluent:
        condition: service_healthy
    command: sh -c "cron -f & python main.py config_mqtt"
    restart: always
    hostname: $HOSTNAME
    volumes:
      - outputtable:/app/src/output_locally_tables
      - hwmetrics:/app/src/metrics
    logging:
      driver: fluentd  # Specify the log driver
      options:
        fluentd-address: localhost:24224  # Address of the Fluentd instance
        tag: "docker.{{.Name}}"
volumes:
  outputtable:  # Define the volume
    external: false  # Specify that it's an external volumemeuvolume:  # Define the volume
  hwmetrics:  # Define the volume
    external: false  # Specify that it's an external volumemeuvolume:  # Define the volume